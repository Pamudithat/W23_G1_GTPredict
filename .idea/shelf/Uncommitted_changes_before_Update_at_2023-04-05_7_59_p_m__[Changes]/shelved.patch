Index: app/src/main/java/com/example/w23_g1_gtpredict/QuickPredResults.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.w23_g1_gtpredict;\r\n// test\r\n//test\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport android.Manifest;\r\nimport android.animation.ObjectAnimator;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.PorterDuff;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.telephony.SmsManager;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.MenuItem;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.view.animation.LinearInterpolator;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport android.widget.Toolbar;\r\n\r\nimport com.denzcoskun.imageslider.ImageSlider;\r\nimport com.denzcoskun.imageslider.constants.ScaleTypes;\r\nimport com.denzcoskun.imageslider.models.SlideModel;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.opencsv.CSVWriter;\r\n\r\nimport java.io.File;\r\nimport java.io.FileWriter;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class QuickPredResults extends AppCompatActivity {\r\n\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    Toolbar toolbar;\r\n    ActionBarDrawerToggle actionBarDrawerToggle;\r\n    ImageView endImage;\r\n\r\n    ViewPager2 viewPager2;\r\n    ObjectAnimator animator;\r\n    Animation animation;\r\n    final String TAG = \"QuickCalcDemo\";\r\n    final String TAG2 = \"test\";\r\n    final String TAG3 = \"test\";\r\n    String outputStr;\r\n    String phone;\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        if(actionBarDrawerToggle.onOptionsItemSelected(item)){\r\n            return  true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_quick_pred_results);\r\n\r\n//        endImage=findViewById(R.id.endImage);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.navigationView);\r\n\r\n\r\n//        animation = AnimationUtils.loadAnimation(getApplicationContext(),R.anim.blink);\r\n//\r\n//        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n//            animator = ObjectAnimator.ofArgb(this, \"color\", Color.YELLOW, Color.RED);\r\n//            animator.setDuration(8000);\r\n//            animator.setInterpolator(new LinearInterpolator());\r\n//        }\r\n\r\n//        endImage.startAnimation(animation);\r\n//        animator.start();\r\n\r\n\r\n        int numTemp = 0;\r\n        try{\r\n\r\n            Bundle bundle = getIntent().getExtras();\r\n            double output = bundle.getDouble(\"OUTPUT\",99999);\r\n            numTemp = getIntent().getExtras().getInt(\"TEMP\",99999);\r\n            String OutputType = bundle.getString(\"TYPE\",\"error\");\r\n            DecimalFormat df = new DecimalFormat(\"#.0\");\r\n            DecimalFormat df1 = new DecimalFormat(\"#.0\");\r\n            outputStr = \"Output KPI Type: \" + OutputType+ \"\\n\" +\"Current Temperature: \" + df1.format(numTemp)+\" degree C\" +\"\\n\" + OutputType+\": \"\r\n                    + df.format(output) +\" Units\" ;\r\n\r\n            TextView textViewQuickResults = findViewById(R.id.textViewQuickResults);\r\n            textViewQuickResults.setText(outputStr);\r\n\r\n            textViewQuickResults.setGravity(Gravity.CENTER);\r\n        }\r\n        catch(Exception ex){\r\n\r\n            ex.printStackTrace();\r\n            Log.d(TAG,\"wrong\"+ numTemp);\r\n\r\n        }\r\n\r\n         ImageSlider imageSlider = findViewById(R.id.imageSlider);\r\n         ArrayList<SlideModel> slideModels = new ArrayList<>();\r\n         slideModels.add(new SlideModel(R.drawable.turbine1, ScaleTypes.FIT));\r\n         slideModels.add(new SlideModel(R.drawable.turbine2, ScaleTypes.FIT));\r\n         slideModels.add(new SlideModel(R.drawable.turbine3, ScaleTypes.FIT));\r\n         slideModels.add(new SlideModel(R.drawable.turbine4, ScaleTypes.FIT));\r\n         slideModels.add(new SlideModel(R.drawable.turbine5, ScaleTypes.FIT));\r\n         imageSlider.setImageList(slideModels,ScaleTypes.FIT);\r\n\r\n\r\n        actionBarDrawerToggle = new ActionBarDrawerToggle(this,drawerLayout,R.string.menu_open,R.string.menu_close);\r\n        drawerLayout.addDrawerListener(actionBarDrawerToggle);\r\n        actionBarDrawerToggle.syncState();\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                switch(item.getItemId()){\r\n                    case R.id.nav_chart:\r\n                        startActivity(new Intent(QuickPredResults.this,graph.class));\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;\r\n\r\n                    case R.id.nav_upload:\r\n                        startActivity(new Intent(QuickPredResults.this,upload_file.class));\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;\r\n\r\n                    case R.id.nav_download:\r\n                        download_csv();\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;\r\n\r\n                    case R.id.nav_email:\r\n                        send_email();\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;\r\n\r\n                    case R.id.nav_sms:\r\n                        Intent myResults = new Intent(QuickPredResults.this,send_sms.class);\r\n\r\n                        Bundle bundle = new Bundle();\r\n                        bundle.putString(\"OUTPUT\",outputStr);\r\n                        myResults.putExtras(bundle);\r\n                        startActivity(myResults);\r\n\r\n                        drawerLayout.closeDrawer(GravityCompat.START);\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n    @Override\r\n    public void finish(){\r\n        super.finish();\r\n        overridePendingTransition(R.anim.slide_in_left,R.anim.slide_out_right);\r\n    }\r\n\r\n    public void setColor(int color){\r\n\r\n        //intensity.setBackgroundColor(color);\r\n        endImage.setColorFilter(color, PorterDuff.Mode.OVERLAY);\r\n    }\r\n\r\n    public void send_email(){\r\n        Intent intent = new Intent(Intent.ACTION_SEND);\r\n        intent.putExtra(Intent.EXTRA_EMAIL,\"\");\r\n        intent.putExtra(Intent.EXTRA_SUBJECT, getResources().getString(R.string.app_name));\r\n        intent.putExtra(Intent.EXTRA_TEXT,outputStr);\r\n        intent.setType(\"message/rfc822\");\r\n        startActivity(Intent.createChooser(intent, \"Choose Email Client\"));\r\n    }\r\n\r\n    public void download_csv(){\r\n//        if(ContextCompat.checkSelfPermission(QuickPredResults.this,\r\n//                Manifest.permission.WRITE_EXTERNAL_STORAGE)!=PackageManager.PERMISSION_GRANTED){\r\n//\r\n            ActivityCompat.requestPermissions(QuickPredResults.this,new String[]{\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE},0);\r\n//\r\n//        }else{\r\n           try{\r\n               File file = new File(\"/sdcard/Download/\");\r\n               file.mkdirs();\r\n\r\n               String csv = \"/sdcard/Download/report.csv\";\r\n               CSVWriter csvWriter = new CSVWriter(new FileWriter(csv, true));\r\n               String row[] = new String[]{\"test\",\"123\"};\r\n               csvWriter.writeNext(row);\r\n               csvWriter.close();\r\n               Toast.makeText(this, \"File Successfully Downloaded\", Toast.LENGTH_SHORT).show();\r\n\r\n           } catch (Exception e){\r\n               e.printStackTrace();\r\n           }\r\n        }\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/w23_g1_gtpredict/QuickPredResults.java b/app/src/main/java/com/example/w23_g1_gtpredict/QuickPredResults.java
--- a/app/src/main/java/com/example/w23_g1_gtpredict/QuickPredResults.java	(revision 0f77bf68b6178c60bcb583aad0fdee4cb45d6a12)
+++ b/app/src/main/java/com/example/w23_g1_gtpredict/QuickPredResults.java	(date 1680042334793)
@@ -124,6 +124,7 @@
          slideModels.add(new SlideModel(R.drawable.turbine3, ScaleTypes.FIT));
          slideModels.add(new SlideModel(R.drawable.turbine4, ScaleTypes.FIT));
          slideModels.add(new SlideModel(R.drawable.turbine5, ScaleTypes.FIT));
+         slideModels.add(new SlideModel(R.drawable.turbine6, ScaleTypes.FIT));
          imageSlider.setImageList(slideModels,ScaleTypes.FIT);
 
 
